#!/usr/bin/env python3
""" Calculate the dominant color of an image

    Code obtained from: https://stackoverflow.com/questions/34084142/python-3-most-common-color-in-image-kmeans-data-type-match
"""

try:
    import Image
except ImportError:
    from PIL import Image
import scipy.misc
import scipy.cluster

NUM_CLUSTERS = 5


def get_dom_color(filename):
    im = Image.open(filename)
    im = im.resize((150, 150))      # optional, to reduce time
    ar = scipy.misc.fromimage(im)
    shape = ar.shape
    ar = ar.reshape(scipy.product(shape[:2]), shape[2])

    codes, dist = scipy.cluster.vq.kmeans(ar.astype(float), NUM_CLUSTERS)

    vecs, dist = scipy.cluster.vq.vq(ar, codes)         # assign codes
    counts, bins = scipy.histogram(vecs, len(codes))    # count occurrences

    index_max = scipy.argmax(counts)                    # find most frequent
    peak = codes[index_max]
    peak = peak.astype(int)
    colour = ''.join(format(c, '02x') for c in peak)
    return colour
